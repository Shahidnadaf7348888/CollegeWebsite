/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.8
 * Generated at: 2023-06-27 06:52:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class RigisterPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("  <!--Boostrap-->\n");
      out.write("        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\" crossorigin=\"anonymous\">\n");
      out.write("        <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM\" crossorigin=\"anonymous\"></script>\n");
      out.write("        <style>\n");
      out.write("            .btn{\n");
      out.write("                box-shadow: .52px 2px 4px black;\n");
      out.write("                border: none;\n");
      out.write("            }\n");
      out.write("            .container{ \n");
      out.write("                border-radius: 20px; \n");
      out.write("              box-shadow: .5px .5px 6px black ;\n");
      out.write("              background:none;\n");
      out.write("              /*color: white;*/\n");
      out.write("            }\n");
      out.write("            .bggimg{\n");
      out.write("                background-image: url('p2.jpg');\n");
      out.write("                height: 100vh;\n");
      out.write("                padding-top: 7rem;\n");
      out.write("                background-size: cover;\n");
      out.write("              \n");
      out.write("            }\n");
      out.write("        </style>\n");
      out.write("        <body>\n");
      out.write("            <div class=\"bggimg\">\n");
      out.write("<div class=\"container  \">\n");
      out.write("    <div class=\"h1 text-center  pt-3\">Register Form</div>\n");
      out.write("    <form action=\"RegisterValueInsert.jsp\" method=\"posts\" class=\"row was-validated\">\n");
      out.write("  <div class=\"col-md-6 mb-3 mt-3\">\n");
      out.write("    <label for=\"uname\" class=\"form-label\">First Name</label>\n");
      out.write("    <input type=\"text\" class=\"form-control\" id=\"uname\" placeholder=\"Enter username\" name=\"uname\" required>\n");
      out.write("    <div class=\"valid-feedback\">Valid.</div>\n");
      out.write("    <div class=\"invalid-feedback\">Please fill out this field.</div>\n");
      out.write("  </div>\n");
      out.write("        <div class=\"col-md-6 mb-3 mt-3\">\n");
      out.write("    <label for=\"uname\" class=\"form-label\">Last Name:</label>\n");
      out.write("    <input type=\"text\" class=\"form-control\" placeholder=\"Enter Last Name\" name=\"lname\" required>\n");
      out.write("    <div class=\"valid-feedback\">Valid.</div>\n");
      out.write("    <div class=\"invalid-feedback\">Please fill out this field.</div>\n");
      out.write("  </div>\n");
      out.write("   <div class=\"col-md-4 mb-3 mt-3\">\n");
      out.write("    <label for=\"uname\" class=\"form-label\">Contact</label>\n");
      out.write("    <input type=\"text\" class=\"form-control\" placeholder=\"Enter Contact\" name=\"contact\" required>\n");
      out.write("    <div class=\"valid-feedback\">Valid.</div>\n");
      out.write("    <div class=\"invalid-feedback\">Please fill out this field.</div>\n");
      out.write("  </div>\n");
      out.write("  <div class=\"col-md-4 mb-3 mt-3\">\n");
      out.write("    <label for=\"pwd\" class=\"form-label\">Password:</label>\n");
      out.write("    <input type=\"password\" class=\"form-control\"  placeholder=\"Enter password\" name=\"pswd\" required>\n");
      out.write("    <div class=\"valid-feedback\">Valid.</div>\n");
      out.write("    <div class=\"invalid-feedback\">Please fill out this field.</div>\n");
      out.write("  </div>\n");
      out.write("   <div class=\"col-md-4 mb-3 mt-3\">\n");
      out.write("    <label for=\"uname\" class=\"form-label\">E-mail</label>\n");
      out.write("    <input type=\"text\" class=\"form-control\"  placeholder=\"Enter E-mail\" name=\"email\" required>\n");
      out.write("    <div class=\"valid-feedback\">Valid.</div>\n");
      out.write("    <div class=\"invalid-feedback\">Please fill out this field.</div>\n");
      out.write("  </div>\n");
      out.write(" \n");
      out.write("  <div class=\"col-md-12 form-check  ms-3 \">\n");
      out.write("    <input class=\"form-check-input\" type=\"checkbox\" id=\"myCheck\" name=\"remember\" required>\n");
      out.write("    <label class=\"form-check-label\" for=\"myCheck\">I agree on blabla.</label>\n");
      out.write("    <div class=\"valid-feedback\">Valid.</div>\n");
      out.write("    <div class=\"invalid-feedback\">Check this checkbox to continue.</div>\n");
      out.write("  </div>\n");
      out.write("        <div class=\"col m-3 text-center\">\n");
      out.write("               <button type=\"submit\" class=\"btn btn-outline-dark m-3  \">Submit</button>\n");
      out.write("               <button type=\"reset\" class=\"btn btn-outline-dark m-3 \">Clear</button>\n");
      out.write("        </div>\n");
      out.write(" \n");
      out.write("</form>\n");
      out.write("</div>\n");
      out.write("            </div>\n");
      out.write("        </body>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
